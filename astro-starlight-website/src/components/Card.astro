---
// src/components/Card.astro
interface Props {
  title: string;
  description: string;
  href: string;
  // We'll pass the non-title/description frontmatter as tags.
  tags?: Record<string, any>;
}

const { title, description, href, tags = {} } = Astro.props;

// Filter out non-string/number tags for display
const displayTags = Object.entries(tags).filter(([key, value]) => {
  // These are already displayed prominently in the card.
  if (['title', 'description'].includes(key)) return false;
  return typeof value === 'string' || typeof value === 'number';
});
---

<a href={href} class="card w-full bg-base-200 shadow-md hover:shadow-xl transition-shadow duration-300 ease-in-out block">
  <div class="card-body">
    <h2 class="card-title text-lg font-bold">{title}</h2>
    <p class="text-sm opacity-80 mt-1">{description}</p>
    {displayTags.length > 0 && (
      <div class="card-actions justify-start mt-4 flex flex-wrap gap-2">
        {displayTags.map(([key, value]) => (
          <div class="badge badge-outline">
            <span class="font-semibold mr-1 capitalize">{key}:</span>
            <span>{value}</span>
          </div>
        ))}
      </div>
    )}
  </div>
</a>
