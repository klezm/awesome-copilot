---
import StarlightPage from '@astrojs/starlight/components/StarlightPage.astro';
import { getCollection } from 'astro:content';

const allDocs = await getCollection('docs');
---
<StarlightPage frontmatter={{ title: 'Template Collection' }}>
  <div class="w-full">
  <div class="mb-8">
    <input
      type="search"
      id="search-input"
      placeholder="Search templates..."
      class="w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-accent-500"
    />
  </div>

  <div id="template-grid" class="grid grid-cols-1 md:grid-cols-2 gap-6">
    {/*
      This is the main rendering logic for the template collection.
      We map over the `allDocs` array fetched in the frontmatter script.
      For each document, we render a "template card" with its title, description, and a link to the detail page.
      The detail pages are automatically generated by Starlight from the markdown files.
    */}
    {allDocs.map(doc => {
      const category = doc.id.split('/')[0];
        const slug = doc.id.replace(/\.md$/, '');
      return (
        <div class="template-card" data-title={doc.data.title} data-description={doc.data.description} data-category={category}>
            <a href={`/${slug}`}>
            <span class={`category-badge ${category}-badge`}>{category}</span>
            <h3>{doc.data.title}</h3>
            <p>{doc.data.description}</p>
          </a>
        </div>
      )
    })}
  </div>
</div>

<script>
  const searchInput = document.getElementById('search-input');
  const templateGrid = document.getElementById('template-grid');
  const templateCards = Array.from(templateGrid.children);
  const filterCheckboxes = document.querySelectorAll('#sidebar-filters input[type="checkbox"]');

  let activeCategoryFilters = [];

  function filterTemplates() {
    const searchTerm = searchInput.value.toLowerCase();

    // Update the active category filters
    activeCategoryFilters = Array.from(filterCheckboxes)
      .filter(checkbox => checkbox.checked)
      .map(checkbox => checkbox.value);

    templateCards.forEach(card => {
      const title = card.dataset.title.toLowerCase();
      const description = card.dataset.description.toLowerCase();
      const category = card.dataset.category;

      const matchesSearch = title.includes(searchTerm) || description.includes(searchTerm);

      // Show card if no categories are selected, or if its category is in the active list
      const matchesFilter = activeCategoryFilters.length === 0 || activeCategoryFilters.includes(category);

      if (matchesSearch && matchesFilter) {
        card.style.display = 'flex';
      } else {
        card.style.display = 'none';
      }
    });
  }

  searchInput.addEventListener('input', filterTemplates);

  filterCheckboxes.forEach(checkbox => {
    checkbox.addEventListener('change', filterTemplates);
  });

  // Initial filter on page load
  filterTemplates();
</script>
</StarlightPage>
